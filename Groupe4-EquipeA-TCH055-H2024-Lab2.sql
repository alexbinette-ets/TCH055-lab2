-- =============================================================================
-- Laboratoire 2 Partie 1
-- Requï¿½tes sur la base de donnï¿½es de la gestion de residence pour ainï¿½s
--
-- Auteurs: Alexandre Binette,
--          Cory Alejandra Herrera Gallego,
--          Hoang Yen Pham,
--          Alexis Roy-Tessier,
--          Donald Vu
-- Date : 22 fï¿½vrier 2024
-- Version 1.

-- **** Comme mentionné par le courriel envoyé mercredi le 6 mars, Alexandre fait maintenant partie de notre équipe.
-- **** Merci de le considérer dans la correction.


-- =============================================================================


--Bloc 1 
--Requï¿½te 1.1 (1 point) :
--Listez les noms (nom et prï¿½nom) des ainï¿½s autonomes. Trier par nom  
SELECT nom, prenom
FROM aine
WHERE autonomie = 'autonome'
ORDER BY nom;


--Requï¿½te 1.2 (1 point) :
--Lister les services (numï¿½ro de service et numï¿½ro dï¿½ï¿½tage) des services de la rï¿½sidence. Trier par numï¿½ro de service.
SELECT num_service, num_etage
FROM Service 
ORDER BY num_service;


--Requï¿½te 1.3 (1 point) :
--Lister toutes les chambres inoccupï¿½es. Pour cette requï¿½te, afficher le numï¿½ro de chambre et le numï¿½ro de service et trier par numï¿½ro de chambre. 
SELECT num_chambre, num_service
FROM Chambre
WHERE id_aine IS NULL
ORDER BY num_chambre;


--Requï¿½te 1.4 (1 point) :
--Lister le numï¿½ro de chaque chambre, avec lï¿½id de lï¿½ainï¿½ si elle est attribuï¿½e. Trier par numï¿½ro de chambre.
SELECT num_chambre, id_aine
FROM Chambre
ORDER BY num_chambre;


--Requï¿½te 1.5 (2 points) :
--Lister les disponibilitï¿½s du prï¿½pose dont le matricule est PRE200 entre le 1er mars 2024 et le 3 mars 2024 (les 2 dates incluses). Trier par date.
SELECT quart_disponibilite.date_quart, quart_disponibilite.label_quart, quart_disponibilite_prepose.prepose_matricule
FROM Quart_Disponibilite
INNER JOIN Quart_Disponibilite_Prepose
ON Quart_Disponibilite.label_quart = Quart_Disponibilite_Prepose.label_quart AND
quart_disponibilite_prepose.date_quart = quart_disponibilite.date_quart
WHERE Quart_Disponibilite_Prepose.prepose_matricule LIKE 'PRE200'
AND Quart_Disponibilite.date_quart BETWEEN  DATE '2024-03-01' AND DATE '2024-03-03'
ORDER BY Quart_Disponibilite.date_quart;

--Requï¿½te 1.6 (2 points) :
--Retrouvez-le ou les ainï¿½s (id, nom de famille et prï¿½nom) dont le nom de famille est composï¿½ dï¿½au moins 6 lettres, 
--commenï¿½ant par la lettre ï¿½ p ï¿½ et se terminant par la lettre ï¿½ t ï¿½. 
--Note : La requï¿½te doit retrouver les noms de famille quï¿½ils soient en minuscules et les majuscules. Trier par identifiant.
SELECT id_aine, nom, prenom
FROM Aine
WHERE LENGTH(nom) >= 6
AND LOWER(nom) LIKE 'p%t'
ORDER BY id_aine;


--Bloc 2 (10 pts)
--Requï¿½te 2.1 (3 points) :
--Lister tous les quarts travaillï¿½s par Lyse Blanchard. Pour cette requï¿½te, afficher le matricule, le nom, le prï¿½nom, la date du quart et le type du quart. Trier par date du quart.
SELECT P.MATRICULE, P.PRENOM, P.NOM, Q.DATE_QUART, Q.LABEL_QUART  
FROM PREPOSE P
INNER JOIN QUART_TRAVAIL_PREPOSE Q ON P.MATRICULE = Q.MATRICULE
WHERE P.NOM = 'Blanchard' and P.PRENOM = 'Lyse' 
ORDER BY Q.DATE_QUART ASC ;


--Requï¿½te 2.2 (3 points)  :
--Lister toutes les chambres incluant les informations de lï¿½ainï¿½ qui lï¿½occupe sï¿½il y a lieux. 
--Pour cette requï¿½te, afficher le numï¿½ro de la chambre, le numï¿½ro du service, le nom, le prï¿½nom et lï¿½autonomie de lï¿½ainï¿½. Trier par numï¿½ro de chambre. 
SELECT C.NUM_CHAMBRE, C.NUM_SERVICE,  A.PRENOM, A.NOM, A.AUTONOMIE 
FROM AINE A
RIGHT JOIN CHAMBRE C ON A.ID_AINE = C.ID_AINE
ORDER BY C.NUM_CHAMBRE ASC;


--Requï¿½te 2.3 (2 points)  :
--Dï¿½terminer le nombre dï¿½ainï¿½s selon lï¿½autonomie. 
--Pour cette requï¿½te, afficher le label de lï¿½autonomie et le nombre dï¿½ainï¿½s correspondant. 
select autonomie, count(*) as nombre_d_aines
from aine
group by autonomie;


--Requï¿½te 2.4 (2 points) :
--Afficher le taux horaire des prï¿½posï¿½s internes. 
--Pour cette requï¿½te, afficher pour chaque prï¿½posï¿½, son nom et son prï¿½nom, le taux horaire et le type du prï¿½posï¿½. 
--Trier le rï¿½sultat par ordre alphabï¿½tique de nom de prï¿½posï¿½. 
select nom, prenom,type_prepose, taux_horaire
from prepose P
join prepose_interne PI
on p.matricule = pi.matricule;


--Requï¿½te 2.5 (2 points) :
--Dï¿½terminer le nombre dï¿½ainï¿½s par activitï¿½. Pour cette requï¿½te, afficher lï¿½identifiant de lï¿½activitï¿½ et le nombre dï¿½ainï¿½s inscrits ï¿½ cette activitï¿½. 
select id_activite, count(*) as nombre_d_aines
from activite_aine
group by id_activite;


--Bloc 3
--Requï¿½te 3.1 (4 points) :
--Trouver les ainï¿½s (nom et prï¿½nom) qui feront lï¿½activitï¿½ du 7 Mars 2024. Trier par nom de lï¿½ainï¿½. 
SELECT AN.nom, AN.prenom
FROM aine AN
INNER JOIN activite_aine AA
ON AN.id_aine = AA.id_aine
INNER JOIN activite A
ON AA.id_activite = A.id_activite
WHERE A.date_activite = date '2024-03-07';


--Requï¿½te 3.2 (4 points) :
--Afficher le nombre dï¿½ainï¿½s qui participeront ï¿½ chacune des activitï¿½s. 
--Pour cette requï¿½te, afficher lï¿½id de lï¿½activitï¿½ et le nombre de participants.
--Renommer la colonne Nombre_Total_Participant.
SELECT id_activite, COUNT(id_aine) AS Nb_Participants
FROM Activite_Aine
GROUP BY id_activite;


--Requï¿½te 3.3 (3 points)  :
--Lister les services en incluant le chef de service. Pour cette requï¿½te afficher le numï¿½ro du service, 
--la catï¿½gorie, le numï¿½ro dï¿½ï¿½tage, le matricule du chef de service, son nom et son prï¿½nom. 
--Trier par numï¿½ro de service et renommer les colonnes nom et prï¿½nom du chef service par Nom_Chef_Service et Prenom_Chef_Service, respectivement.
SELECT 
    s.num_service AS Numero_Service,
    s.categorie AS Categorie,
    s.num_etage AS Numero_Etage,
    s.matricule_chef AS Matricule_Chef_Service,
    p.nom AS Nom_Chef_Service,
    p.prenom AS Prenom_Chef_Service
FROM 
    Service s
INNER JOIN Prepose p
ON s.matricule_chef = p.matricule
ORDER BY  s.num_service; 


--Bloc 4
--Requï¿½te 4.0 (2 points) :
--Ã‰crire la requÃªte dâ€™altÃ©ration de session pour afficher la date et lâ€™heure selon les formats des exemples suivants : 14-03-2024 pour le 14 mars 2024 et 15:30 pour 3h30pm.
ALTER SESSION SET NLS_DATE_FORMAT = 'YYYY-MM-DD HH24:MI';


--Requï¿½te 4.1 (4 points) :
--Lister les ainÃ©s qui nâ€™ont pas eu de prÃ©posÃ©s jusquâ€™Ã  maintenant.
--Câ€™est-Ã -dire quâ€™aucun prÃ©posÃ© ne les a eus dans un quart de travail. Pour cette requÃªte, afficher le nom, le prÃ©nom et lâ€™autonomie de lâ€™ainÃ©. Trier par nom.
SELECT nom, prenom, autonomie
FROM Aine
WHERE id_aine NOT IN (SELECT DISTINCT id_aine FROM Quart_travail_Prepose_Aine)
ORDER BY nom;


--Requï¿½te 4.2 (5 points) :
--Lister le nombre de disponibilitÃ©s de chaque prÃ©posÃ© pour le quart de travail du Â« jour Â» entre le 4 Mars 2024 au 8 Mars 2024.
--Pour cette requÃªte, afficher le matricule du prÃ©posÃ©, son nom, son prÃ©nom et le nombre de disponibilitÃ©s. Trier par nombre de disponibilitÃ©.
SELECT matricule, nom, prenom, COUNT(Quart_Disponibilite_Prepose.prepose_matricule) AS Nombre_Disponibilites
FROM Prepose
LEFT JOIN Quart_Disponibilite_Prepose ON Prepose.matricule = Quart_Disponibilite_Prepose.prepose_matricule
WHERE Quart_Disponibilite_Prepose.date_quart BETWEEN DATE '2024-03-04' AND DATE '2024-03-08' AND Quart_Disponibilite_Prepose.label_quart = 'jour'
GROUP BY matricule, nom, prenom
ORDER BY Nombre_Disponibilites;


--Requï¿½te 4.3 (5 points) :
--Calculer le montant de la paie pour le prÃ©posÃ© â€˜PRI100â€™ des quarts de temps travaillÃ©s.
--Renommer la colonne du montant Â« Paiement_A_effectuer Â». Rappel : un quart de travail, câ€™est 8 heures.
SELECT COUNT(*)* MAX(pi.taux_horaire) * 8 AS Paiement_A_effectuer
FROM Quart_travail_Prepose
INNER JOIN prepose_interne PI
ON pi.matricule = quart_travail_prepose.matricule
WHERE pi.matricule = 'PRI100';


--Requï¿½te 4.4 (4 points) :
--Faire une requÃªte pour afficher les prÃ©posÃ©s avec le nombre dâ€™ainÃ©s dont chacun sâ€™occupe.
--Pour cette requÃªte, afficher le matricule, le nom, le prÃ©nom et le nombre dâ€™ainÃ©s. Trier par matricule 
SELECT QTPA.matricule, nom, prenom, COUNT(DISTINCT QTPA.id_aine) AS Nombre_aines
FROM Prepose 
JOIN Quart_Travail_Prepose_Aine QTPA ON QTPA.matricule = Prepose.matricule
GROUP BY QTPA.matricule, nom, prenom
ORDER BY QTPA.matricule;


--Requï¿½te 4.5 (5 points) :
--Trouver les ainÃ©s qui feront lâ€™activitÃ© du 7 Mars 2024.
--Pour cette requÃªte, afficher le nom et le prÃ©nom de lâ€™ainÃ©, la date de lâ€™activitÃ© et la durÃ©e. Trier par nom de lâ€™ainÃ©.
SELECT AN.nom, AN.prenom
FROM aine AN
INNER JOIN activite_aine AA
ON AN.id_aine = AA.id_aine
INNER JOIN activite A
ON AA.id_activite = A.id_activite
WHERE A.date_activite = date '2024-03-07';


--Requï¿½te 4.6 (5 points) :
--Retrouver la liste des ainÃ©s qui ont le mÃªme prÃ©nom. 
--Ce que lâ€™on souhaite par cette requÃªte, câ€™est dâ€™afficher par paire, 2 ainÃ©s (diffÃ©rents) ayant le mÃªme prÃ©nom. 
--On affiche (sur une mÃªme ligne), lâ€™identifiant, le nom, le prÃ©nom et la date de naissance du premier ainÃ©, lâ€™identifiant, le nom, le prÃ©nom et la date de naissance du 2Ã¨me ainÃ©. 
--Trier le rÃ©sultat par lâ€™identifiant du premier ainÃ©.
select a.id_aine, a.nom, a.prenom, a.date_naissance, 
b.id_aine, b.nom, b.prenom, b.date_naissance
from aine a, aine b
where a.prenom = b.prenom and a.id_aine != b.id_aine
order by a.id_aine;


--Requï¿½te 4.7 (6 points) :
--Lister lâ€™ensemble des prÃ©posÃ©es (internes et externes). 
--Pour cette requÃªte, afficher le matricule, le nom et le prÃ©nom du prÃ©posÃ©, le taux horaire sâ€™il y a lieu et le forfait sâ€™il y a lieu.
SELECT P.matricule, P.nom, P.prenom, PE.forfait, NULL
FROM prepose_externe PE 
INNER JOIN Prepose P 
ON P.matricule = PE.matricule
UNION
SELECT P.matricule, P.nom, P.prenom, NULL, PI.taux_horaire
FROM prepose_interne PI 
INNER JOIN Prepose P 
ON P.matricule = PI.matricule;


--Requï¿½te 4.8 (4 points) :
--Retrouver le type de dâ€™autonomie majoritaire chez les ainÃ©s dont la rÃ©sidence sâ€™occupe actuellement.
select autonomie
from Aine
where rownum = 1
group by autonomie
order by autonomie desc;


--Bloc 5
--Requï¿½te 5.1 (4 points) :
--Affichez la liste des ainÃ©s qui participeront Ã  au moins une activitÃ©. 
--Pour cette requÃªte, afficher lâ€™identifiant (id_aine), le nom, le prÃ©nom et lâ€™autonomie de lâ€™ainÃ©. Trier par identifiant.
SELECT ai.id_aine, ai.nom, ai.prenom, ai.autonomie
FROM Aine ai
INNER JOIN Activite_Aine ac 
ON ai.id_aine = ac.id_aine
ORDER BY ai.id_aine;


--Requï¿½te 5.2 (4 points) :
--Lister les proposÃ©s disponible le 5 mars 2024 pour le quart du jour. 
--Pour cette requÃªte, afficher le matricule, le nom et le prÃ©nom, le tÃ©lÃ©phone et le type du proposÃ© ainsi que la date de disponibilitÃ©.
SELECT p.matricule, p.nom, p.prenom, p.telephone, p.type_prepose, q.label_quart, q.date_quart
FROM Prepose P
INNER JOIN Quart_Disponibilite_Prepose q
ON q.prepose_matricule = p.matricule
WHERE q.date_quart = DATE '2024-03-05'
AND q.label_quart = 'jour';


--Requï¿½te 5.3 (4 points) :
--DÃ©terminer le nombre dâ€™ainÃ©s par service. 
--Pour cette requÃªte, afficher le numÃ©ro de service et le nombre dâ€™ainÃ©s correspondant. Trier par numÃ©ro de service.
SELECT S.NUM_SERVICE, COUNT(C.ID_AINE) AS NB_AINES
FROM SERVICE S 
LEFT JOIN CHAMBRE C ON S.NUM_SERVICE = C.NUM_SERVICE
GROUP BY S.NUM_SERVICE
ORDER BY S.NUM_SERVICE;


--Requï¿½te 5.4 (6 points) :
--DÃ©terminer les prÃ©posÃ©s ayant rÃ©alisÃ©s le plus de quarts de temps de travail. 
--Pour cette requÃªte, afficher le matricule, le nom, le prÃ©nom le tÃ©lÃ©phone et le type de prÃ©posÃ©. Trier par matricule.
SELECT P.matricule, P.nom, P.prenom, P.telephone, P.type_prepose
FROM Prepose P
INNER JOIN Quart_travail_prepose Q
ON P.matricule = Q.matricule
GROUP BY P.matricule, P.nom, P.prenom, P.telephone, P.type_prepose
ORDER BY COUNT(Q.matricule) DESC;


--Requï¿½te 5.5 (5 points) :
--Lister les prÃ©posÃ©s internes. Pour cette requÃªte, afficher le matricule, le nom, le prÃ©nom, le tÃ©lÃ©phone, le taux horaire, 
--le numÃ©ro de service auquel il appartient, et aussi le cas Ã©chÃ©ant, le numÃ©ro et la catÃ©gorie du service quâ€™il dirige. Trier par matricule.
SELECT P.MATRICULE, P.PRENOM, P.NOM, P.TELEPHONE, PI.TAUX_HORAIRE, PI.NUM_SERVICE AS SERVICE_PREPOSE, S.NUM_SERVICE AS SERVICE_DIRIGE
FROM PREPOSE P
INNER JOIN PREPOSE_INTERNE PI ON P.MATRICULE = PI.MATRICULE
LEFT JOIN SERVICE S ON PI.MATRICULE = S.MATRICULE_CHEF
WHERE P.TYPE_PREPOSE = 'INTERNE'
ORDER BY P.MATRICULE;


--Requï¿½te 5.6 (5 points) :
--Lister les ainÃ©s dont le prÃ©posÃ© au matricule Â« PRI100 Â» sâ€™est occupÃ© le 1 mars 2024 pendant ses quarts de travail. 
--Pour cette requÃªte, affichez le matricule, le nom, le prÃ©nom, le type du prÃ©posÃ©, la date et le label du quart de travail,
--lâ€™identifiant, le nom, le prÃ©nom et lâ€™autonomie de lâ€™ainÃ©. Trier par lâ€™identifiant de lâ€™ainÃ©.
SELECT P.MATRICULE, P.PRENOM, P.NOM, P.TYPE_PREPOSE, QA.DATE_QUART, QA.LABEL_QUART, QA.ID_AINE, A.PRENOM, A.NOM, A.AUTONOMIE
FROM PREPOSE P
INNER JOIN QUART_TRAVAIL_PREPOSE_AINE QA ON P.MATRICULE = QA.MATRICULE
INNER JOIN AINE A ON QA.ID_AINE = A.ID_AINE
WHERE P.MATRICULE = 'PRI100' AND QA.DATE_QUART = '2024-03-01'
ORDER BY QA.ID_AINE ASC;


--Requï¿½te 5.7 (5 points) :
--Lister tous les quarts de travail pour lesquels aucun prÃ©posÃ© nâ€™est disponible. 
--Pour cette requÃªte, afficher la date et le label du quart. Trier par date et par label.
SELECT qd.label_quart, qd.date_quart
FROM Quart_Disponibilite qd
WHERE (qd.label_quart, qd.date_quart) NOT IN
(SELECT label_quart,date_quart FROM Quart_Disponibilite_Prepose)
ORDER BY date_quart, label_quart;








